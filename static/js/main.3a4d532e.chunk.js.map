{"version":3,"sources":["Components/SortIcons.tsx","Components/TableSummary.tsx","Components/SortTable.tsx","App.tsx","index.tsx"],"names":["SortIcons","props","sortAscProp","sortAsc","undefined","color","size","type","svgStyle","width","height","display","paddingRight","alphaAscending","fill","d","defaultAscending","alphaDescending","defaultDescending","sortable","icon","role","xmlns","viewBox","style","TableSummary","totalEntries","startRow","endRow","filteredTotal","sortColumn","sortDirection","endingRow","totalShowableRows","displayString","Pagination","React","lazy","Filter","Loading","List","ResponsiveCss","SortTable","tableData","defaultToAll","viewSteps","initialSort","headers","showPagination","dangerouslySetInnerHTML","showFilter","caseSensitiveFilter","id","isResponsive","isResponsiveList","isResponsiveListAlwaysShow","caption","tableClassName","headerClassName","noDataMessage","allDataFilteredMessage","isLoading","isLoadingMessage","initialSortDsc","emptyCellClassName","sortedCellClass","sortTableId","useState","tableDisplayRows","setTableDisplayRows","sortCol","setSortCol","sortAscending","setSortAscending","filterValue","setFilterValue","maxNumber","setMaxNumber","setStartRow","isAlert","setAlert","alertText","setAlertText","noData","allFiltered","useEffect","initialSortColumn","find","header","key","col","sortKey","newSortData","sort","a","b","map","row","index","rowindex","headerButton","noSort","name","buttonIconType","buttonIconColor","onClick","isSortAscending","border","padding","background","textAlign","setAriaSort","buildHeaders","scope","className","displayRows","filter","hide","slice","length","Suspense","fallback","marginBottom","value","marginLeft","marginRight","onChange","e","parseInt","target","step","event","filterText","toLowerCase","newTableDisplayRows","forEach","noFilter","toString","includes","label","rowData","data","__html","rowheader","findIndex","numberOfPages","Math","ceil","initialActivePage","onPageChange","page","App","price","stock","day","saledaynum","url","href","process","version","devDependencies","bootstrap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a4d532e.chunk.js","sourcesContent":["/* Component called by the SortTable component\nShows the icons at the top of the sortable columns\n \nNOTE: icons are free from FontAwesome and can be used without restrictions\nSee the Font Awesome website for more information\n*/\n\nimport React from 'react';\n\n// export type sortType = 'size' | 'alpha' | 'sortable';\n\ninterface Props {\n  sortAsc?: boolean;\n  color?: string;\n  size?: string;\n  type?: string;\n}\n\nconst SortIcons = (props: Props) => {\n  const {\n    sortAsc: sortAscProp,\n    color: colorProp,\n    size: sizeProp,\n    type: typeProp,\n  } = props;\n\n  const sortAsc: boolean = sortAscProp !== undefined ? sortAscProp : true;\n  const color: string = colorProp || '#000000';\n  const size: string = sizeProp || '20px';\n  const type: string = typeProp || 'size';\n\n  const svgStyle = {\n    width: size,\n    height: size,\n    display: 'inline-block',\n    paddingRight: '5px',\n  };\n\n  const alphaAscending = ( // From: https://fontawesome.com/icons/sort-alpha-down?style=solid\n    <path\n      data-icontype='alphaAscending'\n      fill={color}\n      d='M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm240-64H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 446.37V464a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 321.63V304a16 16 0 0 0-16-16zm31.06-85.38l-59.27-160A16 16 0 0 0 372.72 32h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 224h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 224H432a16 16 0 0 0 15.06-21.38zM335.61 144L352 96l16.39 48z'\n    />\n  );\n\n  const defaultAscending = ( // https://fontawesome.com/icons/sort-amount-down-alt?style=solid\n    <path\n      data-icontype='defaultAscending'\n      fill={color}\n      d='M240 96h64a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0 128h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm256 192H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-256-64h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm-64 0h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.37 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z'\n    />\n  );\n\n  const alphaDescending = ( // From: https://fontawesome.com/icons/sort-alpha-up-alt?style=solid\n    <path\n      data-icontype='alphaDescending'\n      fill={color}\n      d='M16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160zm272 64h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 65.63V48a16 16 0 0 0-16-16H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 190.37V208a16 16 0 0 0 16 16zm159.06 234.62l-59.27-160A16 16 0 0 0 372.72 288h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 480h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 480H432a16 16 0 0 0 15.06-21.38zM335.61 400L352 352l16.39 48z'\n    />\n  );\n\n  const defaultDescending = ( // https://fontawesome.com/icons/sort-amount-up?style=solid\n    <path\n      data-icontype='defaultDescending'\n      fill={color}\n      d='M304 416h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.77 160 16 160zm416 0H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64 128H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM496 32H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z'\n    />\n  );\n  const sortable = ( // https://fontawesome.com/icons/sort-alt?style=solid\n    <path\n      data-icontype='sortable'\n      fill={color}\n      d='M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm203.29-219.31l-80-96a16 16 0 0 0-22.62 0l-80 96C186.65 142.74 193.78 160 208 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.19 0 21.36-17.24 11.29-27.31z'\n    />\n  );\n\n  let icon: JSX.Element = <></>;\n\n  switch (type) {\n    case 'alpha':\n      icon = sortAsc === true ? alphaAscending : alphaDescending;\n      break;\n    case 'sortable':\n      icon = sortable;\n      break;\n    default:\n      icon = sortAsc === true ? defaultAscending : defaultDescending;\n  }\n\n  return (\n    <svg\n      role='img'\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 448 512'\n      style={svgStyle}\n      aria-hidden='true'\n    >\n      {icon}\n    </svg>\n  );\n};\n\nexport default SortIcons;\n","import React from 'react';\n\ninterface TableSummaryProps {\n  totalEntries: number;\n  startRow?: number;\n  endRow?: number;\n  filteredTotal?: number;\n  sortColumn?: string;\n  sortDirection?: string;\n}\n\nconst TableSummary = (props: TableSummaryProps) => {\n  const {\n    totalEntries, // total number of rows in table (when unfiltered and not  paginated)\n    startRow,\n    endRow,\n    filteredTotal, // Subset of entries that can be shown\n    sortColumn,\n    sortDirection,\n  } = props;\n\n  let endingRow = endRow;\n  const totalShowableRows = filteredTotal ?? totalEntries;\n\n  if (endRow) {\n    if (filteredTotal && endRow > filteredTotal) {\n      endingRow = filteredTotal;\n    }\n    // else if (endRow > totalEntries) {\n    // endingRow = totalEntries;\n    // }\n  }\n  let displayString =\n    startRow &&\n    endingRow &&\n    totalShowableRows !== 0 &&\n    !(startRow === 1 && endingRow === totalShowableRows)\n      ? `${startRow} - ${endingRow} of `\n      : '';\n  displayString += `${totalShowableRows} `;\n  displayString += totalShowableRows === 1 ? 'entry' : 'entries';\n\n  displayString +=\n    filteredTotal !== undefined && filteredTotal < totalEntries\n      ? ` (filtered from ${totalEntries})`\n      : '';\n\n  displayString += '.';\n  displayString +=\n    sortColumn && sortDirection\n      ? ` ${sortColumn} sorted ${sortDirection}.`\n      : '';\n  return <span>{displayString}</span>;\n};\n\nexport default TableSummary;\n","/* Component to create a sortable and filterable table\nLike a lightweight data tables (https://datatables.net/)\n*/\n\nimport React from 'react';\nimport SortIcons from './SortIcons';\nimport './sortTable.css';\nimport TableSummary from './TableSummary';\n\nconst Pagination = React.lazy(() => import('./Pagination'));\nconst Filter = React.lazy(() => import('./Filter'));\nconst Loading = React.lazy(() => import('./Loading'));\nconst List = React.lazy(() => import('./List'));\nconst ResponsiveCss = React.lazy(() => import('./ResponsiveCss'));\n\nexport type tableDataType = {\n  [key: string]: any;\n  id: string | number;\n  hidden?: boolean;\n  rowindex?: number;\n};\n\ntype headerType = string;\n\nexport type headerDataType = {\n  name: string;\n  key: headerType;\n\n  className?: string;\n  noFilter?: boolean;\n  noSort?: boolean;\n  rowheader?: boolean;\n  sortKey?: headerType;\n  style?: Object;\n  type?: string;\n};\n\ninterface Props {\n  headers: headerDataType[];\n  tableData: tableDataType[];\n\n  allDataFilteredMessage?: JSX.Element;\n  caption?: string;\n  caseSensitiveFilter?: boolean;\n  dangerouslySetInnerHTML?: boolean; // Used very rarely, but should the table process html in a string\n  defaultToAll?: boolean;\n  emptyCellClassName?: string;\n  headerClassName?: string;\n  id?: string;\n  initialSort?: headerType; // what column should be sorted initially\n  initialSortDsc?: boolean;\n  isLoading?: boolean;\n  isLoadingMessage?: JSX.Element;\n  isResponsive?: boolean;\n  isResponsiveList?: boolean;\n  isResponsiveListAlwaysShow?: boolean; // only used for testing\n  noDataMessage?: JSX.Element;\n  showFilter?: boolean;\n  showPagination?: boolean;\n  sortedCellClass?: string;\n  tableClassName?: string;\n  viewSteps?: number[];\n}\n\nconst SortTable = (props: Props): JSX.Element => {\n  const {\n    tableData,\n    defaultToAll,\n    viewSteps,\n    initialSort,\n    headers,\n    showPagination,\n    dangerouslySetInnerHTML,\n    showFilter,\n    caseSensitiveFilter,\n    id,\n    isResponsive,\n    isResponsiveList,\n    isResponsiveListAlwaysShow,\n    caption,\n    tableClassName,\n    headerClassName,\n    noDataMessage,\n    allDataFilteredMessage,\n    isLoading,\n    isLoadingMessage,\n    initialSortDsc,\n    emptyCellClassName,\n    sortedCellClass,\n  } = props;\n\n  const sortTableId = id ?? 'sortTable';\n\n  const [tableDisplayRows, setTableDisplayRows] = React.useState(tableData);\n  const [sortCol, setSortCol] = React.useState(''); // sort by this column\n  const [sortAscending, setSortAscending] = React.useState(true);\n  const [filterValue, setFilterValue] = React.useState('');\n  const [maxNumber, setMaxNumber] = React.useState(\n    defaultToAll || !viewSteps ? null : viewSteps[0]\n  );\n  const [startRow, setStartRow] = React.useState(0);\n  const [isAlert, setAlert] = React.useState(false);\n  const [alertText, setAlertText] = React.useState('');\n\n  const noData: JSX.Element = noDataMessage ?? (\n    <p data-sort-no-data-message>No data is available</p>\n  );\n\n  const allFiltered = allDataFilteredMessage ?? (\n    <p data-sort-all-data-filtered>No data meets filtering criteria</p>\n  );\n\n  /* ********************************* */\n  React.useEffect(() => {\n    const initialSortColumn: headerDataType | undefined = initialSort\n      ? headers.find((header) => header.key === initialSort)\n      : undefined;\n\n    if (initialSortColumn) {\n      setSortAscending(!initialSortDsc);\n\n      const col: headerType =\n        initialSortColumn.sortKey ?? initialSortColumn.key;\n      setSortCol(col);\n    }\n    // We want this to only run on component load, so leaving it as []\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /* ********************************* */\n  React.useEffect(() => {\n    if (sortCol && sortAscending !== undefined) {\n      const newSortData = [...tableDisplayRows]\n        .sort((a, b) => {\n          if (a[sortCol] === b[sortCol]) {\n            return 0;\n          }\n          if (a[sortCol] === undefined) {\n            return sortAscending === false ? -1 : 1;\n          }\n          if (b[sortCol] === undefined) {\n            return sortAscending === true ? -1 : 1;\n          }\n\n          if (a[sortCol] < b[sortCol]) {\n            return sortAscending === true ? -1 : 1;\n          }\n          return sortAscending === false ? -1 : 1;\n        })\n        .map((row, index) => ({ ...row, rowindex: index + 2 }));\n      setTableDisplayRows(newSortData);\n    }\n    // Adding change to tableDisplayRows causes an infinite loop\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortAscending, sortCol]);\n\n  /* ********************************* */\n  const headerButton = (header: headerDataType) => {\n    if (header.noSort !== undefined && header.noSort === true) {\n      return header.name;\n    }\n\n    const buttonIconType =\n      header.key === sortCol || header.sortKey === sortCol\n        ? header.type\n        : 'sortable';\n    const buttonIconColor = buttonIconType === 'sortable' ? '#ccc' : undefined;\n    return (\n      <button\n        type='button'\n        onClick={() => {\n          const col = header.sortKey ?? header.key;\n          const isSortAscending = col !== sortCol || !sortAscending;\n          if (col !== sortCol) {\n            // setSortAscending(true);\n            setSortCol(col);\n          }\n          setSortAscending(isSortAscending);\n          setAlertText(\n            `Sorted by ${header.name} ${\n              isSortAscending ? 'ascending' : 'descending'\n            }`\n          );\n\n          setAlert(true);\n        }}\n        style={{\n          border: 'none',\n          padding: 'none',\n          background: 'none',\n          width: '100%',\n          textAlign: 'left',\n        }}\n      >\n        <SortIcons\n          sortAsc={sortAscending}\n          type={buttonIconType}\n          color={buttonIconColor}\n        />\n        {header.name}\n      </button>\n    );\n  };\n\n  /* ********************************* */\n  const setAriaSort = (col: string) => {\n    if (col !== sortCol) {\n      return undefined;\n    }\n    return sortAscending ? 'ascending' : 'descending';\n  };\n\n  const buildHeaders = (\n    <tr\n      aria-rowindex={showPagination ? 1 : undefined}\n      role={isResponsive && !isResponsiveList ? 'row' : undefined}\n    >\n      {headers.map((header) => (\n        <th\n          scope='col'\n          key={header.key}\n          aria-sort={setAriaSort(header.key)}\n          style={header.style}\n          className={`${header.className} ${\n            header.key === sortCol || header.sortKey === sortCol\n              ? sortedCellClass\n              : ''\n          }`}\n          role={isResponsive && !isResponsiveList ? 'columnheader' : undefined}\n        >\n          {headerButton(header)}\n        </th>\n      ))}\n    </tr>\n  );\n\n  /* ********************************* */\n  const buildDataRow = (rowData: tableDataType) => (\n    <tr\n      key={rowData.id}\n      aria-rowindex={showPagination ? rowData.rowindex : undefined}\n      role={isResponsive && !isResponsiveList ? 'row' : undefined}\n    >\n      {headers.map((header) => {\n        const data = dangerouslySetInnerHTML ? (\n          // eslint-disable-next-line react/no-danger\n          <span dangerouslySetInnerHTML={{ __html: rowData[header.key] }} />\n        ) : (\n          rowData[header.key]\n        );\n\n        const className = `${!data ? emptyCellClassName : ''} ${\n          header.key === sortCol || header.sortKey === sortCol\n            ? sortedCellClass\n            : ''\n        }`;\n        if (header.rowheader) {\n          return (\n            <th\n              scope='row'\n              key={`${rowData.id}${header.key}`}\n              data-sorttable-data-cell\n              role={isResponsive && !isResponsiveList ? 'rowheader' : undefined}\n              className={className}\n            >\n              {data}\n            </th>\n          );\n        }\n        return (\n          <td\n            key={`${rowData.id}${header.key}`}\n            data-sorttable-data-cell\n            role={isResponsive && !isResponsiveList ? 'cell' : undefined}\n            className={className}\n          >\n            {isResponsive && !isResponsiveList ? (\n              <span aria-hidden data-responsive-header>\n                {header.name}\n              </span>\n            ) : null}\n            {data}\n          </td>\n        );\n      })}\n    </tr>\n  );\n\n  /* ********************************* */\n  const displayRows = () =>\n    !showPagination || !maxNumber\n      ? tableDisplayRows.filter((row) => !row.hide)\n      : tableDisplayRows\n          .filter((row) => !row.hide)\n          .slice(startRow, startRow + maxNumber);\n\n  /* ********************************* */\n  const buildData = () => displayRows().map((row) => buildDataRow(row));\n\n  /* ********************************* */\n  const filterRows = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const filterText =\n      caseSensitiveFilter === true\n        ? event.target.value\n        : event.target.value.toLowerCase();\n\n    const newTableDisplayRows = [...tableDisplayRows];\n\n    newTableDisplayRows.forEach((row, index) => {\n      newTableDisplayRows[index].hide = true;\n      headers.forEach((header) => {\n        if (\n          (header.noFilter === undefined || header.noFilter === false) &&\n          row[header.key] !== undefined\n        ) {\n          let value = row[header.key].toString();\n          value = caseSensitiveFilter === true ? value : value.toLowerCase();\n\n          if (value.includes(filterText)) {\n            newTableDisplayRows[index].hide = false;\n          }\n        }\n      });\n    });\n\n    setTableDisplayRows(newTableDisplayRows);\n    setFilterValue(filterText);\n    setStartRow(0);\n  };\n\n  /* ********************************* */\n  const showNumberInput = () => (\n    <div data-sort-number-of-inputs>\n      Show\n      <select\n        className='form-control form-select'\n        aria-label='Number of items shown'\n        value={maxNumber || ''} // TODO this seems like it should be null or undefined ... ?? doesn't work here\n        style={{\n          width: '75px',\n          display: 'inline-block',\n          marginLeft: '0.75em',\n          marginRight: '0.75em',\n        }}\n        onChange={(e) => {\n          setStartRow(0);\n          setMaxNumber(parseInt(e.target.value, 10) ?? null);\n        }}\n      >\n        {viewSteps?.map((step) => (\n          <option value={step} key={step}>\n            {step}\n          </option>\n        ))}\n        <option value=''>All</option>\n      </select>\n      results\n    </div>\n  );\n\n  /* ********************************* */\n  if (tableDisplayRows.length === 0) {\n    return noData;\n  }\n  return (\n    <div className='container-fluid'>\n      <React.Suspense fallback={<></>}>\n        {isResponsive && !isResponsiveList ? <ResponsiveCss /> : null}\n\n        <div\n          className='row'\n          style={{ marginBottom: showPagination || showFilter ? '15px' : '0' }}\n        >\n          {showPagination ? (\n            <div className='col-sm'>{showNumberInput()}</div>\n          ) : null}\n\n          {showFilter ? (\n            <div className='col-sm' style={{ textAlign: 'right' }}>\n              <Filter\n                value={filterValue}\n                onChange={filterRows}\n                label='Filter'\n                id={sortTableId}\n              />{' '}\n            </div>\n          ) : null}\n        </div>\n        <div className='row'>\n          {isAlert ? (\n            <div data-sort-table-confirm>\n              <div className='alert alert-success' role='alert'>\n                {alertText}\n              </div>\n            </div>\n          ) : null}\n\n          <table\n            className={`table ${tableClassName}`}\n            id={sortTableId}\n            aria-describedby={`${sortTableId}RowsShownSummary`}\n            aria-rowcount={\n              showPagination || showFilter\n                ? tableDisplayRows.length + 1\n                : undefined\n            }\n            data-sort-responsive={\n              (isResponsive && !isResponsiveList) ?? undefined\n            }\n            data-sort-responsive-has-list={isResponsiveList ?? undefined}\n            data-sort-responsive-has-list-always-hide={\n              isResponsiveListAlwaysShow ?? undefined\n            }\n            role={isResponsive && !isResponsiveList ? 'table' : undefined}\n          >\n            {caption ? <caption>{caption}</caption> : null}\n            <thead\n              className={headerClassName}\n              role={isResponsive && !isResponsiveList ? 'rowgroup' : undefined}\n            >\n              {buildHeaders}\n            </thead>\n            {!isLoading ? (\n              <tbody\n                role={\n                  isResponsive && !isResponsiveList ? 'rowgroup' : undefined\n                }\n              >\n                {buildData()}\n              </tbody>\n            ) : null}\n          </table>\n\n          {isResponsiveList ? (\n            <List\n              headers={headers}\n              tableData={displayRows()}\n              isResponsiveListAlwaysShow={isResponsiveListAlwaysShow}\n            />\n          ) : null}\n\n          {tableDisplayRows.findIndex((row) => !row.hide) === -1\n            ? allFiltered\n            : null}\n\n          {isLoading && !isLoadingMessage ? <Loading /> : null}\n          {isLoading && isLoadingMessage ? isLoadingMessage : null}\n        </div>\n        <div className='row'>\n          <div\n            className='col-sm'\n            id={`${sortTableId}RowsShownSummary`}\n            data-pagination-summary\n          >\n            {!isLoading ? (\n              <TableSummary\n                totalEntries={tableData.length}\n                startRow={startRow + 1}\n                endRow={\n                  maxNumber\n                    ? startRow + maxNumber\n                    : tableDisplayRows.filter((row) => !row.hide).length\n                }\n                filteredTotal={\n                  tableDisplayRows.filter((row) => !row.hide).length\n                }\n                sortColumn={\n                  headers.find(\n                    (header) =>\n                      header.key === sortCol || header.sortKey === sortCol\n                  )?.name\n                }\n                sortDirection={sortAscending ? 'ascending' : 'descending'}\n              />\n            ) : null}\n          </div>\n\n          {showPagination ? (\n            <div className='col-sm'>\n              <Pagination\n                numberOfPages={Math.ceil(\n                  maxNumber && maxNumber > 0\n                    ? tableDisplayRows.filter((row) => !row.hide).length /\n                        maxNumber\n                    : 1\n                )}\n                initialActivePage={1}\n                id={sortTableId}\n                onPageChange={(page) => {\n                  setStartRow(\n                    maxNumber && page !== 0 ? (page - 1) * maxNumber : 0\n                  );\n                }}\n              />\n            </div>\n          ) : null}\n        </div>\n      </React.Suspense>\n    </div>\n  );\n};\n\nexport default SortTable;\n","import React from 'react';\nimport SortTable, {\n  tableDataType,\n  headerDataType,\n} from './Components/SortTable';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { devDependencies } from '../package.json';\nimport './app.css';\n\nfunction App() {\n  const headers: headerDataType[] = [\n    { name: 'Product Name', key: 'name', type: 'alpha', rowheader: true },\n    { name: 'Price', key: 'price', className: 'myCustomPriceClass' },\n\n    {\n      name: 'Stock',\n      key: 'stock',\n      type: 'number',\n      noFilter: true,\n    },\n    {\n      name: 'Sale day',\n      key: 'day',\n      type: 'size',\n      sortKey: 'saledaynum',\n    },\n    {\n      name: 'Link',\n      key: 'url',\n      noSort: true,\n      noFilter: true,\n      style: { color: 'purple' },\n    },\n  ];\n  const data: tableDataType[] = [\n    {\n      id: 1,\n      name: 'Cheese',\n      price: '$4.90',\n      stock: 20,\n      day: 'Friday',\n      saledaynum: 5,\n      url: '',\n    },\n    {\n      id: 2,\n      name: 'Milk',\n      price: '$1.90',\n      stock: 4,\n      day: 'Monday',\n      saledaynum: 1,\n    },\n    {\n      id: 3,\n      name: 'Yoghurt',\n      price: '$2.40',\n      stock: 12,\n      day: 'Thursday',\n      saledaynum: 4,\n    },\n    {\n      id: 4,\n      name: 'Heavy Cream',\n      price: '$3.90',\n      stock: 9,\n      day: 'Tuesday',\n      saledaynum: 2,\n    },\n    {\n      id: 5,\n      name: 'Butter',\n      price: '$0.90',\n      stock: 99,\n      day: 'Wednesday',\n      saledaynum: 3,\n    },\n    {\n      id: 6,\n      name: 'Sour Cream',\n      price: '$2.90',\n      stock: 86,\n      day: 'Saturday',\n      saledaynum: 6,\n    },\n    {\n      id: 7,\n      name: 'Fancy French Cheese',\n      price: '$99.0',\n      stock: 15,\n      url: <a href='https://google.com'>hello google</a>,\n      day: 'Sunday',\n      saledaynum: 0,\n    },\n    { id: 8, name: 'Eggs', price: '$1.90', stock: 86 },\n    {\n      id: 9,\n      name: 'Ricotta Cheese',\n      price: '$3.99',\n      stock: 6,\n      day: 'Saturday',\n      saledaynum: 6,\n    },\n    { id: 10, name: 'Frozen Custard', price: '$5.50', stock: 11 },\n    {\n      id: 11,\n      name: 'Whey Powder',\n      price: '$15.90',\n      stock: 8,\n      day: 'Wednesday',\n      saledaynum: 3,\n    },\n  ];\n\n  return (\n    <div className='container'>\n      <h1>Sample Filtering and Sorting Table</h1>\n      <p>\n        This is the demo page for a React sort table component. See the{' '}\n        <a href='https://github.com/mydobie/sortTable'>Github page</a> for more\n        information.\n      </p>\n      <hr />\n      <h2>Responsive using modified CSS</h2>\n      <p>\n        This table has sorting, filter, and pagination enable. To assist users\n        to know what column is sorted, the sorted cells have a custom CSS\n        applied. On screens less than 700px, custom CSS will be applied to\n        display the table to appear as if it is a list.\n      </p>\n      <SortTable\n        id='sampleTable1'\n        tableData={data}\n        headers={headers}\n        initialSort='month'\n        showFilter\n        showPagination\n        viewSteps={[1, 2, 4, 50]}\n        caption='Store inventory'\n        tableClassName='table-hover table-sm'\n        defaultToAll\n        isResponsive\n        emptyCellClassName='emptyCell'\n        sortedCellClass='sortedCellClass'\n        // allDataFilteredMessage='My custom all filtered message'\n      />\n      <hr />\n      <h2>Responsive using definition list</h2>\n      <p>\n        On screens less than 600px, the table will be hidden and a definition\n        list will be shown instead.\n      </p>\n      <SortTable\n        id='sampleTable2'\n        tableData={data}\n        headers={headers}\n        initialSort='month'\n        caption='Store inventory'\n        tableClassName='table-hover table-sm'\n        isResponsiveList\n      />\n      <hr />\n      <ul>\n        <li>\n          <strong>Project Name: </strong>\n          {process.env.REACT_APP_NAME}\n        </li>\n        <li>\n          <strong>Project Version: </strong>\n          {process.env.REACT_APP_VERSION}\n        </li>\n        <li>\n          <strong>Git Commit: </strong>\n          {process.env.REACT_APP_GIT_SHA}\n        </li>\n        <li>\n          <strong>React Version: </strong>\n          {React.version}\n        </li>\n        <li>\n          <strong>Bootstrap CSS Version: </strong>\n          {devDependencies.bootstrap}\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","// NOTE:  There normally isn't a need to change this file\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}