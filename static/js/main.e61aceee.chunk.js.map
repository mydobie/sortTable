{"version":3,"sources":["Components/SortIcons.tsx","Components/Page.tsx","Components/Pagination.tsx","Components/Filter.tsx","Components/Loading.tsx","Components/SortTable.tsx","App.tsx","index.tsx"],"names":["SortIcons","props","sortAscProp","sortAsc","undefined","color","size","type","svgStyle","width","height","display","paddingRight","alphaAscending","data-icontype","fill","d","defaultAscending","alphaDescending","defaultDescending","sortable","icon","ariaLabel","role","xmlns","viewBox","style","aria-label","PaginationButton","active","disabled","pageNumber","onClick","isPrevious","isNext","className","data-pagination-previous-button","data-pagination-next-button","data-pagination-button","aria-current","aria-hidden","Pagination","initialActivePage","numberOfPages","onPageChange","id","React","useState","activePage","setActivePage","useEffect","data-skip-pagination-wrapper","href","data-skip-pagination-link","data-pagination","Page","options","i","push","value","onChange","event","parseInt","target","data-pagination-select","setSelect","pages","setPages","Filter","label","data-filter","htmlFor","marginLeft","data-filter-input","Loading","colorProp","sizeProp","data-sort-table-loading","SortTable","tableData","defaultToAll","viewSteps","initialSort","headers","showPagination","dangerouslySetInnerHTML","showFilter","caseSensitiveFilter","isResponsive","caption","tableClassName","headerClassName","noDataMessage","allDataFilteredMessage","isLoading","isLoadingMessage","initialSortDsc","sortTableId","tableDisplayRows","setTableDisplayRows","sortCol","setSortCol","sortAscending","setSortAscending","filterValue","setFilterValue","maxNumber","setMaxNumber","startRow","setStartRow","noData","data-sort-no-data-message","allFiltered","data-sort-all-data-filtered","initialSortColumn","find","header","key","col","sortKey","newSortData","sort","a","b","map","row","index","rowindex","headerButton","noSort","name","buttonIconType","buttonIconColor","border","padding","background","textAlign","setAriaSort","buildHeaders","aria-rowindex","scope","aria-sort","length","marginBottom","data-sort-number-of-inputs","marginRight","e","step","filterText","toLowerCase","newTableDisplayRows","forEach","hide","noFilter","toString","includes","aria-describedby","aria-rowcount","data-sort-responsive","filter","slice","rowData","data","__html","rowheader","data-sorttable-data-cell","data-label","findIndex","data-pagination-summary","totalRows","totalFiltered","endRow","rowsShownSummary","Math","ceil","page","App","price","stock","month","monthValue","url","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e61aceee.chunk.js","sourcesContent":["/* Component called by the SortTable component\nShows the icons at the top of the sortable columns\n \nNOTE: icons are free from FontAwesome and can be used without restrictions\nSee the Font Awesome website for more information\n*/\n\nimport React from 'react';\n\n// export type sortType = 'size' | 'alpha' | 'sortable';\n\ninterface Props {\n  sortAsc?: boolean;\n  color?: string;\n  size?: string;\n  type?: string;\n}\n\nconst SortIcons = (props: Props) => {\n  const {\n    sortAsc: sortAscProp,\n    color: colorProp,\n    size: sizeProp,\n    type: typeProp,\n  } = props;\n\n  const sortAsc: boolean = sortAscProp !== undefined ? sortAscProp : true;\n  const color: string = colorProp || '#000000';\n  const size: string = sizeProp || '20px';\n  const type: string = typeProp || 'size';\n\n  const svgStyle = {\n    width: size,\n    height: size,\n    display: 'inline-block',\n    paddingRight: '5px',\n  };\n\n  const alphaAscending = ( // From: https://fontawesome.com/icons/sort-alpha-down?style=solid\n    <path\n      data-icontype='alphaAscending'\n      fill={color}\n      d='M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm240-64H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 446.37V464a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 321.63V304a16 16 0 0 0-16-16zm31.06-85.38l-59.27-160A16 16 0 0 0 372.72 32h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 224h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 224H432a16 16 0 0 0 15.06-21.38zM335.61 144L352 96l16.39 48z'\n    />\n  );\n\n  const defaultAscending = ( // https://fontawesome.com/icons/sort-amount-down-alt?style=solid\n    <path\n      data-icontype='defaultAscending'\n      fill={color}\n      d='M240 96h64a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0 128h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm256 192H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-256-64h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm-64 0h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.37 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z'\n    />\n  );\n\n  const alphaDescending = ( // From: https://fontawesome.com/icons/sort-alpha-up-alt?style=solid\n    <path\n      data-icontype='alphaDescending'\n      fill={color}\n      d='M16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160zm272 64h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 65.63V48a16 16 0 0 0-16-16H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 190.37V208a16 16 0 0 0 16 16zm159.06 234.62l-59.27-160A16 16 0 0 0 372.72 288h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 480h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 480H432a16 16 0 0 0 15.06-21.38zM335.61 400L352 352l16.39 48z'\n    />\n  );\n\n  const defaultDescending = ( // https://fontawesome.com/icons/sort-amount-up?style=solid\n    <path\n      data-icontype='defaultDescending'\n      fill={color}\n      d='M304 416h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.77 160 16 160zm416 0H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64 128H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM496 32H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z'\n    />\n  );\n  const sortable = ( // https://fontawesome.com/icons/sort-alt?style=solid\n    <path\n      data-icontype='sortable'\n      fill={color}\n      d='M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm203.29-219.31l-80-96a16 16 0 0 0-22.62 0l-80 96C186.65 142.74 193.78 160 208 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.19 0 21.36-17.24 11.29-27.31z'\n    />\n  );\n\n  let icon: JSX.Element = <></>;\n\n  switch (type) {\n    case 'alpha':\n      icon = sortAsc === true ? alphaAscending : alphaDescending;\n      break;\n    case 'sortable':\n      icon = sortable;\n      break;\n    default:\n      icon = sortAsc === true ? defaultAscending : defaultDescending;\n  }\n\n  let ariaLabel = 'Sortable';\n\n  if (type !== 'sortable') {\n    ariaLabel = `Sorted ${sortAsc === true ? 'ascending' : 'descending'}`;\n  }\n\n  return (\n    <svg\n      role='img'\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 448 512'\n      style={svgStyle}\n      aria-label={ariaLabel}\n    >\n      {icon}\n    </svg>\n  );\n};\n\n// SortIcons.propTypes = {\n//   sortAsc: PropTypes.bool, // sort ascending (if false, shows descending icon)\n//   color: PropTypes.string, // color of the icon\n//   size: PropTypes.string, // width and height\n//   type: PropTypes.oneOf(['size', 'alpha', 'sortable']),\n// };\n// SortIcons.defaultProps = {\n//   sortAsc: true,\n//   color: '#000000',\n//   size: '20px',\n//   type: 'size',\n// };\n\nexport default SortIcons;\n","import React from 'react';\n\ninterface Props {\n  onClick?: (pageNumber: number | undefined) => void;\n  active: boolean;\n  pageNumber?: number;\n  disabled?: boolean;\n  isPrevious?: boolean;\n  isNext?: boolean;\n}\nconst PaginationButton = (props: Props) => {\n  const { active, disabled, pageNumber, onClick, isPrevious, isNext } = props;\n\n  let ariaLabel;\n  if (isNext) {\n    ariaLabel = 'Next page';\n  } else if (isPrevious) {\n    ariaLabel = 'Previous page';\n  }\n  return (\n    <li\n      className={`page-item ${disabled ? 'disabled' : ''} ${\n        active ? 'active' : ''\n      }`}\n      data-pagination-previous-button={isPrevious}\n      data-pagination-next-button={isNext}\n      data-pagination-button={!isNext && !isPrevious ? true : undefined}\n    >\n      <button\n        type='button'\n        className={`page-link ${active ? 'active' : ''}`}\n        aria-current={active ? 'page' : undefined}\n        onClick={onClick ? () => onClick(pageNumber) : () => {}}\n        disabled={disabled}\n        aria-label={ariaLabel}\n      >\n        {isPrevious ? <span aria-hidden='true'>&laquo;</span> : null}\n        {isNext ? <span aria-hidden='true'>&raquo;</span> : null}\n        {!isPrevious && !isNext ? (\n          <>\n            <span className='sr-only visually-hidden'>page </span>\n            {pageNumber}\n          </>\n        ) : null}\n      </button>\n    </li>\n  );\n};\n\nexport default PaginationButton;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport Page from './Page';\nimport './pagination.css';\n\ninterface Props {\n  numberOfPages: number;\n  initialActivePage: number;\n  onPageChange: (newPageNumber: number) => void;\n  id: string;\n}\n\nconst Pagination = (props: Props) => {\n  const { initialActivePage, numberOfPages, onPageChange, id } = props;\n  const [activePage, setActivePage] = React.useState(initialActivePage);\n\n  const maxNumberOfPages = 10;\n\n  React.useEffect(() => {\n    onPageChange(activePage);\n  }, [activePage, onPageChange]);\n\n  React.useEffect(() => {\n    setActivePage(1);\n    onPageChange(1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [numberOfPages]);\n\n  if (numberOfPages === 1) {\n    return null;\n  }\n\n  const setPages = () => {\n    const pages = [];\n    for (let i = 1; i <= numberOfPages; i += 1) {\n      pages.push(\n        <Page\n          pageNumber={i}\n          key={i}\n          active={activePage === i}\n          onClick={() => {\n            setActivePage(i);\n          }}\n        />\n      );\n    }\n    return pages;\n  };\n\n  const setSelect = () => {\n    const options = [];\n    for (let i = 1; i <= numberOfPages; i += 1) {\n      options.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n    return (\n      <li>\n        <select\n          className='form-select form-select-sm custom-select custom-select-sm'\n          style={{ width: '6em' }}\n          onChange={(event) => setActivePage(parseInt(event.target.value, 10))}\n          value={activePage}\n          aria-label='Show page number'\n          data-pagination-select\n        >\n          {options}\n        </select>\n      </li>\n    );\n  };\n\n  return (\n    <div>\n      <div className='text-right text-end' data-skip-pagination-wrapper>\n        <a href={`#${id}EndPagination`} data-skip-pagination-link>\n          Skip pagination\n        </a>\n      </div>\n      <nav aria-label='Table pagination'>\n        <ul\n          className='pagination pagination-sm justify-content-end'\n          data-pagination\n        >\n          <Page\n            active={activePage === 0}\n            disabled={activePage <= 1}\n            onClick={() => {\n              setActivePage(activePage - 1);\n            }}\n            isPrevious\n          />\n          {numberOfPages > maxNumberOfPages ? setSelect() : setPages()}\n\n          <Page\n            active={activePage === numberOfPages + 1}\n            disabled={activePage >= numberOfPages}\n            onClick={() => {\n              setActivePage(activePage + 1);\n            }}\n            isNext\n          />\n        </ul>\n      </nav>\n      <div id={`${id}EndPagination`} />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\n\ninterface Props {\n  label: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | number;\n  id: string;\n}\n\nconst Filter = (props: Props) => {\n  const { label, onChange, value, id } = props;\n  return (\n    <div className='form-inline justify-content-end' data-filter>\n      <div className='form-group'>\n        <label htmlFor={`${id}FilterInput`}>{label}</label>\n        <input\n          style={{\n            marginLeft: '0.75em',\n            display: 'inline-block',\n            width: '250px',\n          }}\n          type='text'\n          id={`${id}FilterInput`}\n          className='form-control'\n          onChange={(event) => onChange(event)}\n          value={value}\n          data-filter-input\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","/* Component called by the SortTable component\nShows the icons at the top of the sortable columns\n \nNOTE: icons are free from FontAwesome and can be used without restrictions\nSee the Font Awesome website for more information\n*/\n\nimport React from 'react';\n\n// export type sortType = 'size' | 'alpha' | 'sortable';\n\ninterface Props {\n  color?: string;\n  size?: string;\n}\n\nconst Loading = (props: Props) => {\n  const { color: colorProp, size: sizeProp } = props;\n\n  const color: string = colorProp ?? '#aaa ';\n  const size: string = sizeProp ?? '40px';\n\n  const style = {\n    width: size,\n    height: size,\n    color,\n  };\n\n  return (\n    <div\n      className='spinner-border'\n      role='status'\n      style={style}\n      data-sort-table-loading\n    >\n      <span className='sr-only visually-hidden'>Loading...</span>\n    </div>\n  );\n};\n\nexport default Loading;\n","/* eslint-disable no-console */\n/* Component to create a sortable and filterable table\nLike a lightweight data tables (https://datatables.net/)\n*/\n\nimport React from 'react';\nimport SortIcons from './SortIcons';\nimport Pagination from './Pagination';\nimport Filter from './Filter';\nimport Loading from './Loading';\nimport './responsive.css';\n\nexport type tableDataType = {\n  [key: string]: any;\n  id: string | number;\n  hidden?: boolean;\n  rowindex?: number;\n};\n\ntype headerType = string;\n\nexport type headerDataType = {\n  name: string;\n  key: headerType;\n\n  className?: string;\n  noFilter?: boolean;\n  noSort?: boolean;\n  rowheader?: boolean;\n  sortKey?: headerType;\n  style?: Object;\n  type?: string;\n};\n\ninterface Props {\n  headers: headerDataType[];\n  tableData: tableDataType[];\n\n  allDataFilteredMessage?: JSX.Element;\n  caption?: string;\n  caseSensitiveFilter?: boolean;\n  dangerouslySetInnerHTML?: boolean; // Used very rarely, but should the table process html in a string\n  defaultToAll?: boolean;\n  headerClassName?: string;\n  id?: string;\n  initialSort?: headerType; // what column shouold be sorted intially\n  initialSortDsc?: boolean;\n  isLoading?: boolean;\n  isLoadingMessage?: JSX.Element;\n  isResponsive?: boolean;\n  noDataMessage?: JSX.Element;\n  showFilter?: boolean;\n  showPagination?: boolean;\n  tableClassName?: string;\n  viewSteps?: number[];\n}\n\nconst SortTable = (props: Props): JSX.Element => {\n  const {\n    tableData,\n    defaultToAll,\n    viewSteps,\n    initialSort,\n    headers,\n    showPagination,\n    dangerouslySetInnerHTML,\n    showFilter,\n    caseSensitiveFilter,\n    id,\n    isResponsive,\n    caption,\n    tableClassName,\n    headerClassName,\n    noDataMessage,\n    allDataFilteredMessage,\n    isLoading,\n    isLoadingMessage,\n    initialSortDsc,\n  } = props;\n\n  const sortTableId = id ?? 'sortTable';\n\n  const [tableDisplayRows, setTableDisplayRows] = React.useState(tableData);\n  const [sortCol, setSortCol] = React.useState(''); // sort by this columnn\n  const [sortAscending, setSortAscending] = React.useState(true);\n  const [filterValue, setFilterValue] = React.useState('');\n  const [maxNumber, setMaxNumber] = React.useState(\n    defaultToAll || !viewSteps ? null : viewSteps[0]\n  );\n  const [startRow, setStartRow] = React.useState(0);\n\n  const noData: JSX.Element = noDataMessage ?? (\n    <p data-sort-no-data-message>No data is available</p>\n  );\n\n  const allFiltered = allDataFilteredMessage ?? (\n    <p data-sort-all-data-filtered>No data meets filtering criteria</p>\n  );\n\n  /* ********************************* */\n  React.useEffect(() => {\n    const initialSortColumn: headerDataType | undefined = initialSort\n      ? headers.find((header) => header.key === initialSort)\n      : undefined;\n\n    if (initialSortColumn) {\n      setSortAscending(!initialSortDsc);\n\n      const col: headerType =\n        initialSortColumn.sortKey ?? initialSortColumn.key;\n      setSortCol(col);\n    }\n    // We want this to only run on component load, so leaving it as []\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /* ********************************* */\n  React.useEffect(() => {\n    if (sortCol && sortAscending !== undefined) {\n      const newSortData = [...tableDisplayRows]\n        .sort((a, b) => {\n          if (a[sortCol] === b[sortCol]) {\n            return 0;\n          }\n          if (a[sortCol] === undefined) {\n            return sortAscending === false ? -1 : 1;\n          }\n          if (b[sortCol] === undefined) {\n            return sortAscending === true ? -1 : 1;\n          }\n\n          if (a[sortCol] < b[sortCol]) {\n            return sortAscending === true ? -1 : 1;\n          }\n          // if (a[sortCol] > b[sortCol]) {\n          return sortAscending === false ? -1 : 1;\n          // }\n        })\n        .map((row, index) => ({ ...row, rowindex: index + 2 }));\n      setTableDisplayRows(newSortData);\n    }\n    // Adding chagne to tableDisplayRows causes an infinate loop\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortAscending, sortCol]);\n\n  /* ********************************* */\n  const headerButton = (header: headerDataType) => {\n    if (header.noSort !== undefined && header.noSort === true) {\n      return header.name;\n    }\n\n    const buttonIconType =\n      header.key === sortCol || header.sortKey === sortCol\n        ? header.type\n        : 'sortable';\n    const buttonIconColor = buttonIconType === 'sortable' ? '#ccc' : undefined;\n    return (\n      <button\n        type='button'\n        onClick={() => {\n          const col = header.sortKey ?? header.key;\n          if (col !== sortCol) {\n            setSortAscending(true);\n            setSortCol(col);\n          } else {\n            setSortAscending(!sortAscending);\n          }\n        }}\n        style={{\n          border: 'none',\n          padding: 'none',\n          background: 'none',\n          width: '100%',\n          textAlign: 'left',\n        }}\n      >\n        <SortIcons\n          sortAsc={sortAscending}\n          type={buttonIconType}\n          color={buttonIconColor}\n        />\n        {header.name}\n      </button>\n    );\n  };\n\n  /* ********************************* */\n  const setAriaSort = (col: string) => {\n    if (col !== sortCol) {\n      return undefined;\n    }\n    return sortAscending ? 'ascending' : 'descending';\n  };\n\n  const buildHeaders = (\n    <tr aria-rowindex={showPagination ? 1 : undefined}>\n      {headers.map((header) => (\n        <th\n          scope='col'\n          key={header.key}\n          aria-sort={setAriaSort(header.key)}\n          style={header.style}\n          className={header.className}\n        >\n          {headerButton(header)}\n        </th>\n      ))}\n    </tr>\n  );\n\n  /* ********************************* */\n  const buildDataRow = (rowData: tableDataType) => (\n    <tr\n      key={rowData.id}\n      aria-rowindex={showPagination ? rowData.rowindex : undefined}\n    >\n      {headers.map((header) => {\n        const data = dangerouslySetInnerHTML ? (\n          // eslint-disable-next-line react/no-danger\n          <span dangerouslySetInnerHTML={{ __html: rowData[header.key] }} />\n        ) : (\n          rowData[header.key]\n        );\n        if (header.rowheader) {\n          return (\n            <th\n              scope='row'\n              key={`${rowData.id}${header.key}`}\n              data-sorttable-data-cell\n              data-label={header.name}\n            >\n              {data}\n            </th>\n          );\n        }\n        return (\n          <td\n            key={`${rowData.id}${header.key}`}\n            data-sorttable-data-cell\n            data-label={header.name}\n          >\n            {data}\n          </td>\n        );\n      })}\n    </tr>\n  );\n\n  /* ********************************* */\n  const buildData = () => {\n    const rows =\n      !showPagination || !maxNumber\n        ? tableDisplayRows.filter((row) => !row.hide)\n        : tableDisplayRows\n            .filter((row) => !row.hide)\n            .slice(startRow, startRow + maxNumber);\n\n    return rows.map((row) => buildDataRow(row));\n  };\n\n  /* ********************************* */\n  const filterRows = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const filterText =\n      caseSensitiveFilter === true\n        ? event.target.value\n        : event.target.value.toLowerCase();\n\n    const newTableDisplayRows = [...tableDisplayRows];\n\n    newTableDisplayRows.forEach((row, index) => {\n      newTableDisplayRows[index].hide = true;\n      headers.forEach((header) => {\n        if (\n          (header.noFilter === undefined || header.noFilter === false) &&\n          row[header.key] !== undefined\n        ) {\n          let value = row[header.key].toString();\n          value = caseSensitiveFilter === true ? value : value.toLowerCase();\n\n          if (value.includes(filterText)) {\n            newTableDisplayRows[index].hide = false;\n          }\n        }\n      });\n    });\n\n    setTableDisplayRows(newTableDisplayRows);\n    setFilterValue(filterText);\n    setStartRow(0);\n  };\n\n  /* ********************************* */\n  const showNumberInput = () => (\n    <div data-sort-number-of-inputs>\n      Show\n      <select\n        className='form-control form-select'\n        aria-label='Number of items shown'\n        value={maxNumber || ''} // TODO this seems like it should be null or undefined ... ?? doesn't work here\n        style={{\n          width: '75px',\n          display: 'inline-block',\n          marginLeft: '0.75em',\n          marginRight: '0.75em',\n        }}\n        onChange={(e) => {\n          setStartRow(0);\n          setMaxNumber(parseInt(e.target.value, 10) ?? null);\n        }}\n      >\n        {viewSteps?.map((step) => (\n          <option value={step} key={step}>\n            {step}\n          </option>\n        ))}\n        <option value=''>All</option>\n      </select>\n      results\n    </div>\n  );\n\n  /* ********************************* */\n  const rowsShownSummary = () => {\n    const totalRows = tableDisplayRows.length;\n    const totalFiltered = tableDisplayRows.filter((row) => !row.hide).length;\n\n    let endRow = totalFiltered;\n\n    if (maxNumber) {\n      endRow = startRow + maxNumber;\n      endRow = endRow > totalFiltered ? totalFiltered : endRow;\n    }\n\n    if (totalFiltered === totalRows && startRow === 0 && endRow === totalRows) {\n      return `Showing ${totalRows} entries`;\n    }\n\n    return `Showing ${\n      showPagination ? `${startRow + 1} to ${endRow} of ` : ''\n    }${totalFiltered} entries${\n      filterValue === '' ? '' : `(filtered from ${totalRows} total entries)`\n    }`;\n  };\n\n  /* ********************************* */\n  if (tableDisplayRows.length === 0) {\n    return noData;\n  }\n  return (\n    <div className='container-fluid'>\n      <div\n        className='row'\n        style={{ marginBottom: showPagination || showFilter ? '15px' : '0' }}\n      >\n        {showPagination ? (\n          <div className='col-sm'>{showNumberInput()}</div>\n        ) : null}\n        {showFilter ? (\n          <div className='col-sm' style={{ textAlign: 'right' }}>\n            <Filter\n              value={filterValue}\n              onChange={filterRows}\n              label='Filter'\n              id={sortTableId}\n            />{' '}\n          </div>\n        ) : null}\n      </div>\n      <div className='row'>\n        <table\n          className={`table ${tableClassName}`}\n          id={sortTableId}\n          aria-describedby={`${sortTableId}RowsShownSummary`}\n          aria-rowcount={\n            showPagination || showFilter ? tableDisplayRows.length : undefined\n          }\n          data-sort-responsive={isResponsive ?? undefined}\n        >\n          {caption ? <caption>{caption}</caption> : null}\n          <thead className={headerClassName}>{buildHeaders}</thead>\n          {!isLoading ? <tbody>{buildData()}</tbody> : null}\n        </table>\n        {tableDisplayRows.findIndex((row) => !row.hide) === -1\n          ? allFiltered\n          : null}\n\n        {isLoading && !isLoadingMessage ? <Loading /> : null}\n        {isLoading && isLoadingMessage ? isLoadingMessage : null}\n      </div>\n      <div className='row'>\n        <div\n          className='col-sm'\n          id={`${sortTableId}RowsShownSummary`}\n          data-pagination-summary\n        >\n          {!isLoading ? rowsShownSummary() : null}\n        </div>\n        {showPagination ? (\n          <div className='col-sm'>\n            <Pagination\n              numberOfPages={Math.ceil(\n                maxNumber && maxNumber > 0\n                  ? tableDisplayRows.filter((row) => !row.hide).length /\n                      maxNumber\n                  : 1\n              )}\n              initialActivePage={1}\n              id={sortTableId}\n              onPageChange={(page) => {\n                setStartRow(\n                  maxNumber && page !== 0 ? (page - 1) * maxNumber : 0\n                );\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default SortTable;\n","import React from 'react';\nimport SortTable, {\n  tableDataType,\n  headerDataType,\n} from './Components/SortTable';\n\nfunction App() {\n  const headers: headerDataType[] = [\n    {\n      name: 'Product Name',\n      key: 'name',\n      type: 'alpha',\n      rowheader: true,\n      style: { width: '250px' },\n    },\n    { name: 'Price', key: 'price', className: 'priceRow' },\n    { name: 'Stock', key: 'stock' },\n    { name: 'Month', key: 'month', sortKey: 'monthValue' },\n    { name: 'Link', key: 'url', noSort: true, noFilter: true },\n  ];\n\n  const data: tableDataType[] = [\n    {\n      id: 1,\n      name: 'Cheese',\n      price: '$4.90',\n      stock: 20,\n      month: 'June',\n      monthValue: 6,\n    },\n    {\n      id: 2,\n      name: 'Milk',\n      price: '$1.90',\n      stock: 4,\n      month: 'April',\n      monthValue: 4,\n    },\n    {\n      id: 3,\n      name: 'Yoghurt',\n      price: '$2.40',\n      stock: 12,\n      month: 'June',\n      monthValue: 6,\n    },\n    {\n      id: 4,\n      name: 'Heavy Cream',\n      price: '$3.90',\n      stock: 9,\n      month: 'June',\n      monthValue: 6,\n    },\n    {\n      id: 5,\n      name: 'Butter',\n      price: '$0.90',\n      stock: 99,\n      month: 'March',\n      monthValue: 3,\n    },\n    {\n      id: 6,\n      name: 'Sour Cream ',\n      price: '$2.90',\n      stock: 86,\n      url: <a href='https://reactjs.org/'>Link to React</a>,\n      month: 'March',\n      monthValue: 3,\n    },\n    {\n      id: 7,\n      name: 'Fancy French Cheese',\n      price: '$99.0',\n      stock: 12,\n      month: 'April',\n      monthValue: 4,\n    },\n  ];\n\n  return (\n    <div>\n      <h1>Sample Filtering and Sorting Table</h1>\n      <SortTable\n        tableData={data}\n        headers={headers}\n        initialSort='month'\n        showFilter\n        showPagination\n        viewSteps={[2, 4, 50]}\n        caption='Store inventory'\n        tableClassName='table-hover table-sm'\n        defaultToAll\n        isResponsive\n        // headerClassName='table-dark'\n      />\n      <hr />\n      <ul>\n        <li>\n          <strong>Project Name:</strong>\n          {process.env.REACT_APP_NAME}\n        </li>\n        <li>\n          <strong>Project Version:</strong>\n          {process.env.REACT_APP_VERSION}\n        </li>\n        <li>\n          <strong>Git Commit:</strong>\n          {process.env.REACT_APP_GIT_SHA}\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","// NOTE:  There normally isn't a need to change this file\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}