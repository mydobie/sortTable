{"version":3,"file":"static/js/736.fa2834b4.chunk.js","mappings":"iMAiDA,EAvCyB,SAACA,GACxB,IAEIC,EAFIC,EAA8DF,EAA9DE,OAAQC,EAAsDH,EAAtDG,SAAUC,EAA4CJ,EAA5CI,WAAYC,EAAgCL,EAAhCK,QAASC,EAAuBN,EAAvBM,WAAYC,EAAWP,EAAXO,OAQ3D,OALIA,EACFN,EAAY,YACHK,IACTL,EAAY,kBAGZ,eACEO,UAAS,oBAAeL,EAAW,WAAa,GAAvC,YACPD,EAAS,SAAW,IAEtB,kCAAiCI,EACjC,8BAA6BC,EAC7B,0BAAyBA,IAAWD,QAAoBG,EAN1D,UAQE,oBACEC,KAAK,SACLF,UAAS,oBAAeN,EAAS,SAAW,IAC5C,eAAcA,EAAS,YAASO,EAChCJ,QAASA,EAAU,kBAAMA,EAAQD,IAAc,aAC/CD,SAAUA,EACV,aAAYF,EANd,UAQGK,GAAa,iBAAM,cAAY,OAAlB,kBAA0C,KACvDC,GAAS,iBAAM,cAAY,OAAlB,kBAA0C,KAClDD,GAAeC,EAKb,MAJF,iCACE,iBAAMC,UAAU,0BAAhB,mBACCJ,WCyEb,EAtGmB,SAACJ,GAClB,MAA4DA,EAApDW,WAAAA,OAAR,MAAqB,EAArB,EAAwBC,EAAoCZ,EAApCY,cAAeC,EAAqBb,EAArBa,aAAcC,EAAOd,EAAPc,IAGrDC,EAAAA,EAAAA,YAAU,WACJJ,EAAaC,GACfC,EAAaD,GAEXD,EAAa,GACfE,EAAa,KAEd,CAACF,EAAYC,EAAeC,IAE3BD,EAAgB,GAClBI,QAAQC,KAAK,6CAKf,GAAIL,GAAiB,EACnB,OAAO,KA6CT,OACE,4BACE,gBAAKJ,UAAU,sBAAsB,kCAArC,UACE,cAAGU,KAAI,WAAMJ,EAAN,iBAAyB,+BAAhC,gCAIF,gBAAK,aAAW,mBAAhB,UACE,gBACEN,UAAU,+CACV,qBAFF,WAIE,SAACW,EAAD,CACEjB,OAAuB,IAAfS,EACRR,SAAUQ,GAAc,EACxBN,QAAS,WACPQ,EAAaF,EAAa,IAE5BL,YAAU,IAEXM,EApEgB,GAuBP,WAEhB,IADA,IAAMQ,EAAU,GACPC,EAAI,EAAGA,GAAKT,EAAeS,GAAK,EACvCD,EAAQE,MACN,mBAAQC,MAAOF,EAAf,SACGA,GADoBA,IAK3B,OACE,yBACE,mBACEb,UAAU,4DACVgB,MAAO,CAAEC,MAAO,OAChBC,SAAU,SAACC,GAAD,OAAWd,EAAae,SAASD,EAAME,OAAON,MAAO,MAC/DA,MAAOZ,EACP,aAAW,mBACX,4BANF,SAQGS,MA0BmCU,GA9D3B,WAEf,IADA,IAAMC,EAAQ,GADO,WAEZV,GACPU,EAAMT,MACJ,SAACH,EAAD,CACEf,WAAYiB,EAEZnB,OAAQS,IAAeU,EACvBhB,QAAS,WACPQ,EAAaQ,KAHVA,KAJFA,EAAI,EAAGA,GAAKT,EAAeS,GAAK,EAAI,EAApCA,GAYT,OAAOU,EAgDiDC,IAElD,SAACb,EAAD,CACEjB,OAAQS,IAAeC,EAAgB,EACvCT,SAAUQ,GAAcC,EACxBP,QAAS,WACPQ,EAAaF,EAAa,IAE5BJ,QAAM,UAIZ,gBAAKO,GAAE,UAAKA,EAAL","sources":["Components/Page.tsx","Components/Pagination.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Props {\n  onClick?: (pageNumber: number | undefined) => void;\n  active: boolean;\n  pageNumber?: number;\n  disabled?: boolean;\n  isPrevious?: boolean;\n  isNext?: boolean;\n}\nconst PaginationButton = (props: Props): JSX.Element => {\n  const { active, disabled, pageNumber, onClick, isPrevious, isNext } = props;\n\n  let ariaLabel;\n  if (isNext) {\n    ariaLabel = 'Next page';\n  } else if (isPrevious) {\n    ariaLabel = 'Previous page';\n  }\n  return (\n    <li\n      className={`page-item ${disabled ? 'disabled' : ''} ${\n        active ? 'active' : ''\n      }`}\n      data-pagination-previous-button={isPrevious}\n      data-pagination-next-button={isNext}\n      data-pagination-button={!isNext && !isPrevious ? true : undefined}\n    >\n      <button\n        type='button'\n        className={`page-link ${active ? 'active' : ''}`}\n        aria-current={active ? 'page' : undefined}\n        onClick={onClick ? () => onClick(pageNumber) : () => {}}\n        disabled={disabled}\n        aria-label={ariaLabel}\n      >\n        {isPrevious ? <span aria-hidden='true'>&laquo;</span> : null}\n        {isNext ? <span aria-hidden='true'>&raquo;</span> : null}\n        {!isPrevious && !isNext ? (\n          <>\n            <span className='sr-only visually-hidden'>page </span>\n            {pageNumber}\n          </>\n        ) : null}\n      </button>\n    </li>\n  );\n};\n\nexport default PaginationButton;\n","/* eslint-disable no-console */\nimport React, { useEffect } from 'react';\nimport Page from './Page';\nimport './pagination.css';\n\ninterface Props {\n  numberOfPages: number;\n  activePage: number;\n  onPageChange: (newPageNumber: number) => void;\n  id: string;\n}\n\nconst Pagination = (props: Props): JSX.Element | null => {\n  const { activePage = 1, numberOfPages, onPageChange, id } = props;\n  // const [activePage, setActivePage] = React.useState(initialActivePage);\n\n  useEffect(() => {\n    if (activePage > numberOfPages) {\n      onPageChange(numberOfPages);\n    }\n    if (activePage < 1) {\n      onPageChange(1);\n    }\n  }, [activePage, numberOfPages, onPageChange]);\n\n  if (numberOfPages < 1) {\n    console.warn('Number of pagination pages is less than 1');\n  }\n\n  const maxNumberOfPages = 10;\n\n  if (numberOfPages <= 1) {\n    return null;\n  }\n\n  const setPages = () => {\n    const pages = [];\n    for (let i = 1; i <= numberOfPages; i += 1) {\n      pages.push(\n        <Page\n          pageNumber={i}\n          key={i}\n          active={activePage === i}\n          onClick={() => {\n            onPageChange(i);\n          }}\n        />\n      );\n    }\n    return pages;\n  };\n\n  const setSelect = () => {\n    const options = [];\n    for (let i = 1; i <= numberOfPages; i += 1) {\n      options.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n    return (\n      <li>\n        <select\n          className='form-select form-select-sm custom-select custom-select-sm'\n          style={{ width: '6em' }}\n          onChange={(event) => onPageChange(parseInt(event.target.value, 10))}\n          value={activePage}\n          aria-label='Show page number'\n          data-pagination-select\n        >\n          {options}\n        </select>\n      </li>\n    );\n  };\n\n  return (\n    <div>\n      <div className='text-right text-end' data-skip-pagination-wrapper>\n        <a href={`#${id}EndPagination`} data-skip-pagination-link>\n          Skip pagination\n        </a>\n      </div>\n      <nav aria-label='Table pagination'>\n        <ul\n          className='pagination pagination-sm justify-content-end'\n          data-pagination\n        >\n          <Page\n            active={activePage === 0}\n            disabled={activePage <= 1}\n            onClick={() => {\n              onPageChange(activePage - 1);\n            }}\n            isPrevious\n          />\n          {numberOfPages > maxNumberOfPages ? setSelect() : setPages()}\n\n          <Page\n            active={activePage === numberOfPages + 1}\n            disabled={activePage >= numberOfPages}\n            onClick={() => {\n              onPageChange(activePage + 1);\n            }}\n            isNext\n          />\n        </ul>\n      </nav>\n      <div id={`${id}EndPagination`} />\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"names":["props","ariaLabel","active","disabled","pageNumber","onClick","isPrevious","isNext","className","undefined","type","activePage","numberOfPages","onPageChange","id","useEffect","console","warn","href","Page","options","i","push","value","style","width","onChange","event","parseInt","target","setSelect","pages","setPages"],"sourceRoot":""}