{"version":3,"sources":["AppRouteNames.ts","AppNavBar.tsx","Components/SortIcons.tsx","Components/TableSummary.tsx","Components/SortDropDown.tsx","Components/sortUtils.ts","Components/SortTable.tsx","Example.tsx","FourOhFour.tsx","AppRoutes.tsx","App.tsx","index.tsx"],"names":["AppNavBar","className","activeClassName","to","ROUTES","SortIcons","props","sortAscProp","sortAsc","undefined","color","size","type","svgStyle","width","height","display","paddingRight","alphaAscending","fill","d","defaultAscending","alphaDescending","defaultDescending","sortable","icon","role","xmlns","viewBox","style","TableSummary","totalEntries","startRow","endRow","filteredTotal","sortColumn","sortDirection","endingRow","totalShowableRows","displayString","SortDropDown","headers","selected","onChange","sortAscending","id","htmlFor","value","e","target","map","header","noSort","sortKey","key","name","paddingLeft","onClick","border","background","textAlign","padding","sortRows","rows","sortCol","onSort","sortedRows","sort","a","b","row","index","rowindex","filterRows","filterValue","caseSensitiveFilter","useFuzzySearch","maxFuzzyDistance","filterText","toLowerCase","newTableDisplayRows","forEach","hide","noFilter","toString","distance","includes","Pagination","React","lazy","Filter","Loading","List","ResponsiveCss","SortTable","tableData","allDataFilteredMessage","caption","initialFilter","initialPage","initialRowsDisplayed","initialSort","initialSortDsc","isLoadingMessage","noDataMessage","viewSteps","dangerouslySetInnerHTML","defaultToAll","emptyCellClassName","headerClassName","isLoading","isResponsive","isResponsiveList","showFilter","showPagination","sortedCellClass","tableClassName","debounceTimeout","isResponsiveListAlwaysShow","rowsDisplayed","sortTableId","useState","tableDisplayRows","setTableDisplayRows","setSortCol","setSortAscending","setFilterValue","maxNumber","setMaxNumber","activePage","setActivePage","filteredRows","useCallback","filter","numberOfPages","Math","ceil","length","sortTableRows","col","ascending","initialRows","noData","allFiltered","useEffect","initialSortColumn","find","fRows","sortedColumn","sortedAscending","rowsShown","page","pages","totalFiltered","headerButton","buttonIconType","buttonIconColor","setAriaSort","buildHeaders","scope","displayRows","slice","Suspense","fallback","marginBottom","marginLeft","marginRight","parseInt","step","label","rowData","data","__html","rowheader","findIndex","onPageChange","App","price","stock","day","saledaynum","url","href","changeData","console","log","process","version","FourOhFour","AppRoutes","path","exact","basename","RenderApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31863adc.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  HOME: '/',\n};\n","/* eslint-disable import/no-extraneous-dependencies */\n// Main navigation bar\n\nimport React, { ReactElement } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport ROUTES from './AppRouteNames';\n\n// EXAMPLE: Navigation bar\nconst AppNavBar = (): ReactElement => (\n  <nav>\n    <ul className='nav'>\n      <li className='nav-item'>\n        <NavLink activeClassName='active' className='nav-link' to={ROUTES.HOME}>\n          Home\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default AppNavBar;\n","/* Component called by the SortTable component\nShows the icons at the top of the sortable columns\n \nNOTE: icons are free from FontAwesome and can be used without restrictions\nSee the Font Awesome website for more information\n*/\n\nimport React from 'react';\n\n// export type sortType = 'size' | 'alpha' | 'sortable';\n\ninterface Props {\n  sortAsc?: boolean;\n  color?: string;\n  size?: string;\n  type?: string;\n}\n\nconst SortIcons = (props: Props): JSX.Element => {\n  const {\n    sortAsc: sortAscProp,\n    color: colorProp,\n    size: sizeProp,\n    type: typeProp,\n  } = props;\n\n  const sortAsc: boolean = sortAscProp !== undefined ? sortAscProp : true;\n  const color: string = colorProp || '#000000';\n  const size: string = sizeProp || '20px';\n  const type: string = typeProp || 'size';\n\n  const svgStyle = {\n    width: size,\n    height: size,\n    display: 'inline-block',\n    paddingRight: '5px',\n  };\n\n  const alphaAscending = ( // From: https://fontawesome.com/icons/sort-alpha-down?style=solid\n    <path\n      data-icontype='alphaAscending'\n      fill={color}\n      d='M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm240-64H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 446.37V464a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 321.63V304a16 16 0 0 0-16-16zm31.06-85.38l-59.27-160A16 16 0 0 0 372.72 32h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 224h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 224H432a16 16 0 0 0 15.06-21.38zM335.61 144L352 96l16.39 48z'\n    />\n  );\n\n  const defaultAscending = ( // https://fontawesome.com/icons/sort-amount-down-alt?style=solid\n    <path\n      data-icontype='defaultAscending'\n      fill={color}\n      d='M240 96h64a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0 128h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm256 192H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-256-64h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm-64 0h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.37 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z'\n    />\n  );\n\n  const alphaDescending = ( // From: https://fontawesome.com/icons/sort-alpha-up-alt?style=solid\n    <path\n      data-icontype='alphaDescending'\n      fill={color}\n      d='M16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160zm272 64h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 65.63V48a16 16 0 0 0-16-16H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 190.37V208a16 16 0 0 0 16 16zm159.06 234.62l-59.27-160A16 16 0 0 0 372.72 288h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 480h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 480H432a16 16 0 0 0 15.06-21.38zM335.61 400L352 352l16.39 48z'\n    />\n  );\n\n  const defaultDescending = ( // https://fontawesome.com/icons/sort-amount-up?style=solid\n    <path\n      data-icontype='defaultDescending'\n      fill={color}\n      d='M304 416h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.77 160 16 160zm416 0H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64 128H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM496 32H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z'\n    />\n  );\n  const sortable = ( // https://fontawesome.com/icons/sort-alt?style=solid\n    <path\n      data-icontype='sortable'\n      fill={color}\n      d='M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm203.29-219.31l-80-96a16 16 0 0 0-22.62 0l-80 96C186.65 142.74 193.78 160 208 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.19 0 21.36-17.24 11.29-27.31z'\n    />\n  );\n\n  let icon: JSX.Element = <></>;\n\n  switch (type) {\n    case 'alpha':\n      icon = sortAsc === true ? alphaAscending : alphaDescending;\n      break;\n    case 'sortable':\n      icon = sortable;\n      break;\n    default:\n      icon = sortAsc === true ? defaultAscending : defaultDescending;\n  }\n\n  return (\n    <svg\n      role='img'\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 448 512'\n      style={svgStyle}\n      aria-hidden='true'\n    >\n      {icon}\n    </svg>\n  );\n};\n\nexport default SortIcons;\n","import React from 'react';\n\ninterface TableSummaryProps {\n  totalEntries: number;\n  startRow?: number;\n  endRow?: number;\n  filteredTotal?: number;\n  sortColumn?: string;\n  sortDirection?: string;\n}\n\nconst TableSummary = (props: TableSummaryProps): JSX.Element => {\n  const {\n    totalEntries, // total number of rows in table (when unfiltered and not  paginated)\n    startRow,\n    endRow,\n    filteredTotal, // Subset of entries that can be shown\n    sortColumn,\n    sortDirection,\n  } = props;\n\n  let endingRow = endRow;\n  const totalShowableRows = filteredTotal ?? totalEntries;\n\n  if (endRow) {\n    if (filteredTotal && endRow > filteredTotal) {\n      endingRow = filteredTotal;\n    }\n    // else if (endRow > totalEntries) {\n    // endingRow = totalEntries;\n    // }\n  }\n  let displayString =\n    startRow &&\n    endingRow &&\n    totalShowableRows !== 0 &&\n    !(startRow === 1 && endingRow === totalShowableRows)\n      ? `${startRow} - ${endingRow} of `\n      : '';\n  displayString += `${totalShowableRows} `;\n  displayString += totalShowableRows === 1 ? 'entry' : 'entries';\n\n  displayString +=\n    filteredTotal !== undefined && filteredTotal < totalEntries\n      ? ` (filtered from ${totalEntries})`\n      : '';\n\n  displayString += '.';\n  displayString +=\n    sortColumn && sortDirection\n      ? ` ${sortColumn} sorted ${sortDirection}.`\n      : '';\n  return <span>{displayString}</span>;\n};\n\nexport default TableSummary;\n","/* eslint-disable react/require-default-props */\nimport React, { ReactElement } from 'react';\nimport SortIcons from './SortIcons';\nimport { headerDataType, headerType } from './SortTable';\n\ntype SortDropDownProps = {\n  headers: headerDataType[];\n  selected?: headerType | null;\n  onChange?: (columnKey: headerType, sortAscending: boolean) => void;\n  sortAscending?: boolean | null;\n  id?: string;\n};\n\nconst SortDropDown = (props: SortDropDownProps): ReactElement => {\n  const {\n    headers,\n    selected = null,\n    onChange = () => {},\n    sortAscending = null,\n    id = 'sortDropDown',\n  } = props;\n\n  return (\n    <div className='row' data-sort-dropdown data-testid='sortDropDownWrapper'>\n      <div className='col-auto' style={{ paddingRight: 0 }}>\n        <label htmlFor={`${id}SortDropDown`}>Sort:</label>\n      </div>\n      <div className='col-auto' style={{ paddingRight: 0 }}>\n        <select\n          id={`${id}SortDropDown`}\n          value={selected || ''}\n          className='form-control form-select'\n          onChange={(e) => onChange(e.target.value, true)}\n          data-testid='sortDropDownColumn'\n        >\n          {selected === '' ? <option value=''>Select a sort</option> : null}\n          {headers.map((header) =>\n            !header.noSort ? (\n              <option\n                key={header.key}\n                value={header.sortKey || header.key || ''}\n              >\n                {header.name}\n              </option>\n            ) : null\n          )}\n        </select>\n      </div>\n      {selected ? (\n        <div className='col-auto' style={{ paddingLeft: 0 }}>\n          <button\n            type='button'\n            onClick={() => {\n              onChange(selected, !sortAscending);\n            }}\n            style={{\n              border: 'none',\n              background: 'none',\n              width: '100%',\n              textAlign: 'left',\n              padding: '5px 10px',\n            }}\n            aria-label='Sort order'\n            data-testid='sortDropDownButton'\n            data-sortdirection={sortAscending ? 'asc' : 'desc'}\n          >\n            <SortIcons sortAsc={sortAscending || false} />\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SortDropDown;\n","/* eslint-disable no-console */\nimport { distance } from 'fastest-levenshtein';\nimport { tableDataType, headerDataType } from './SortTable';\n\nexport const sortRows = ({\n  rows,\n  sortCol,\n  sortAscending,\n  onSort = () => {},\n}: {\n  rows: tableDataType[];\n  sortCol: string;\n  sortAscending: boolean | null;\n  onSort?: (sortRows: tableDataType[]) => void | undefined;\n}): tableDataType[] => {\n  const sortedRows = [...rows]\n    .sort((a, b) => {\n      if (a[sortCol] === b[sortCol]) {\n        return 0;\n      }\n      if (a[sortCol] === undefined) {\n        return sortAscending === false ? -1 : 1;\n      }\n      if (b[sortCol] === undefined) {\n        return sortAscending === true ? -1 : 1;\n      }\n\n      if (a[sortCol] < b[sortCol]) {\n        return sortAscending === true ? -1 : 1;\n      }\n      return sortAscending === false ? -1 : 1;\n    })\n    .map((row, index) => ({ ...row, rowindex: index + 2 }));\n\n  onSort(sortedRows);\n  return sortedRows;\n};\n\nexport const filterRows = ({\n  rows,\n  filterValue = '',\n  caseSensitiveFilter = false,\n  headers,\n  useFuzzySearch = true,\n  maxFuzzyDistance,\n}: {\n  rows: tableDataType[];\n  filterValue: string;\n  caseSensitiveFilter: boolean | undefined;\n  headers: headerDataType[];\n  useFuzzySearch: boolean | undefined;\n  maxFuzzyDistance: number;\n}): tableDataType[] => {\n  const filterText =\n    caseSensitiveFilter === true ? filterValue : filterValue.toLowerCase();\n\n  const newTableDisplayRows = [...rows];\n  newTableDisplayRows.forEach((row, index) => {\n    newTableDisplayRows[index].hide = true;\n    headers.forEach((header) => {\n      if (\n        (header.noFilter === undefined || header.noFilter === false) &&\n        row[header.key] !== undefined\n      ) {\n        let value = row[header.key].toString();\n        value = caseSensitiveFilter === true ? value : value.toLowerCase();\n\n        if (\n          (useFuzzySearch && distance(value, filterText) <= maxFuzzyDistance) ||\n          value.includes(filterText)\n        ) {\n          newTableDisplayRows[index].hide = false;\n        }\n      }\n    });\n  });\n\n  return rows;\n};\n\nexport const displayRows = ({\n  sortedAndFilteredRows,\n  activePage,\n  numberPerPage,\n}: {\n  sortedAndFilteredRows: tableDataType[];\n  activePage: number | null;\n  numberPerPage: number | null;\n}): tableDataType[] => {\n  if (activePage === null || numberPerPage === null) {\n    return sortedAndFilteredRows;\n  }\n  const startIndex = (activePage - 1) * numberPerPage;\n  const endIndex = startIndex + numberPerPage;\n  const newRows = sortedAndFilteredRows.slice(startIndex, endIndex);\n  return newRows;\n};\n\nexport const sortDirectionString = (\n  col: string,\n  sortCol: string,\n  sortAscending: boolean\n): 'ascending' | 'descending' | 'none' | 'other' | undefined => {\n  if (col !== sortCol) {\n    return undefined;\n  }\n  return sortAscending ? 'ascending' : 'descending';\n};\n","/* eslint-disable no-console */\n/* Component to create a sortable and filterable table\nLike a lightweight data tables (https://datatables.net/)\n*/\n\nimport React from 'react';\nimport SortIcons from './SortIcons';\nimport './sortTable.css';\nimport TableSummary from './TableSummary';\nimport SortDropDown from './SortDropDown';\nimport { sortRows, filterRows } from './sortUtils';\n\nconst Pagination = React.lazy(() => import('./Pagination'));\nconst Filter = React.lazy(() => import('./Filter'));\nconst Loading = React.lazy(() => import('./Loading'));\nconst List = React.lazy(() => import('./List'));\nconst ResponsiveCss = React.lazy(() => import('./ResponsiveCss'));\n\nexport const sortTableVersion = process.env.REACT_APP_VERSION;\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type tableDataType = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  id: string | number;\n  hidden?: boolean;\n  rowindex?: number;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type headerType = string;\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type headerDataType = {\n  name: string;\n  key: headerType;\n\n  className?: string;\n  noFilter?: boolean;\n  noSort?: boolean;\n  rowheader?: boolean;\n  sortKey?: headerType;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  style?: Object;\n  type?: string;\n};\n\ninterface Props {\n  // Required\n  headers: headerDataType[];\n  tableData: tableDataType[];\n\n  // Optional - data\n  allDataFilteredMessage?: JSX.Element | string;\n  caption?: string;\n  initialFilter?: string;\n  initialPage?: number;\n  initialRowsDisplayed?: number;\n  initialSort?: headerType; // what column should be sorted initially\n  initialSortDsc?: boolean;\n  isLoadingMessage?: JSX.Element | string; // Used if isLoading is true\n  noDataMessage?: JSX.Element | string;\n  viewSteps?: number[];\n\n  // Optional - config\n  caseSensitiveFilter?: boolean;\n  dangerouslySetInnerHTML?: boolean; // Used very rarely, but should the table process html in a string\n  defaultToAll?: boolean;\n  emptyCellClassName?: string;\n  headerClassName?: string;\n  id?: string;\n  isLoading?: boolean;\n  isResponsive?: boolean;\n  isResponsiveList?: boolean;\n  showFilter?: boolean;\n  showPagination?: boolean;\n  sortedCellClass?: string;\n  tableClassName?: string;\n  useFuzzySearch?: boolean;\n\n  // Optional - callbacks\n  onChange?: (props: {\n    sortedColumn: headerType;\n    sortedAscending: boolean;\n    rowsShown: number | null;\n    filter: string;\n    page: number;\n    pages: number;\n    totalFiltered: number;\n  }) => void;\n\n  // For testing (wouldn't normally be used)\n  debounceTimeout?: number;\n  isResponsiveListAlwaysShow?: boolean;\n  maxFuzzyDistance?: number;\n}\n\nconst SortTable = (props: Props): JSX.Element => {\n  const {\n    // Required\n    headers,\n    tableData,\n\n    // Optional - data\n    allDataFilteredMessage,\n    caption,\n    initialFilter = '',\n    initialPage,\n    initialRowsDisplayed,\n    initialSort,\n    initialSortDsc,\n    isLoadingMessage,\n    noDataMessage,\n    viewSteps,\n\n    // Optional - config\n    caseSensitiveFilter,\n    dangerouslySetInnerHTML,\n    defaultToAll,\n    emptyCellClassName,\n    headerClassName,\n    id,\n    isLoading,\n    isResponsive,\n    isResponsiveList,\n    showFilter,\n    showPagination,\n    sortedCellClass,\n    tableClassName,\n    useFuzzySearch,\n\n    // Optional - callbacks\n    onChange = () => {},\n\n    // For testing (wouldn't normally be used)\n    debounceTimeout,\n    isResponsiveListAlwaysShow,\n    maxFuzzyDistance = 3,\n  } = props;\n\n  let rowsDisplayed = defaultToAll || !viewSteps ? null : viewSteps[0];\n\n  if (initialRowsDisplayed && viewSteps) {\n    rowsDisplayed = viewSteps.includes(initialRowsDisplayed)\n      ? initialRowsDisplayed\n      : rowsDisplayed;\n  }\n\n  const sortTableId = id ?? 'sortTable';\n  const [tableDisplayRows, setTableDisplayRows] = React.useState(tableData);\n  const [sortCol, setSortCol] = React.useState(''); // sort by this column\n  const [sortAscending, setSortAscending] = React.useState(true);\n  const [filterValue, setFilterValue] = React.useState('');\n  const [maxNumber, setMaxNumber] = React.useState(rowsDisplayed); // aka number of rows shown at a time\n  const [activePage, setActivePage] = React.useState(initialPage ?? 1);\n\n  const filteredRows = React.useCallback(\n    () => tableDisplayRows.filter((row) => !row.hide),\n    [tableDisplayRows]\n  );\n\n  const numberOfPages = Math.ceil(\n    maxNumber && maxNumber > 0 && filteredRows().length > 0\n      ? filteredRows().length / maxNumber\n      : 1\n  );\n\n  /* ***************************** */\n  const sortTableRows = (\n    col: string,\n    ascending: boolean,\n    initialRows = tableDisplayRows\n  ) => {\n    const rows = sortRows({\n      rows: initialRows,\n      sortCol: col,\n      sortAscending: ascending,\n    });\n\n    setTableDisplayRows(rows);\n\n    setSortCol(col);\n    setSortAscending(ascending);\n  };\n  /* ***************************** */\n  const filterTableRows = (filter: string) => {\n    setTableDisplayRows(\n      filterRows({\n        rows: tableDisplayRows,\n        filterValue: filter,\n        caseSensitiveFilter,\n        headers,\n        useFuzzySearch,\n        maxFuzzyDistance,\n      })\n    );\n    setFilterValue(filter);\n  };\n\n  /* ***************************** */\n\n  const startRow = maxNumber ? (activePage - 1) * maxNumber : 1;\n\n  /* ***************************** */\n  const noData: JSX.Element | string = noDataMessage ?? (\n    <p data-sort-no-data-message>No data is available</p>\n  );\n\n  const allFiltered = allDataFilteredMessage ?? (\n    <p data-sort-all-data-filtered>No data meets filtering criteria</p>\n  );\n\n  /* ********************************* */\n  React.useEffect(() => {\n    const initialSortColumn: headerDataType | undefined = initialSort\n      ? headers.find((header) => header.key === initialSort)\n      : undefined;\n\n    if (initialSortColumn) {\n      const col: headerType =\n        initialSortColumn.sortKey ?? initialSortColumn.key;\n\n      // TODO Clean this up so we can use the given helpers above\n      sortRows({\n        rows: tableDisplayRows,\n        sortCol: col,\n        sortAscending: !initialSortDsc,\n        onSort: (sortedRows) => {\n          setSortCol(col);\n          setSortAscending(!initialSortDsc);\n\n          if (initialFilter && initialFilter !== '') {\n            const fRows = filterRows({\n              rows: sortedRows,\n              filterValue: initialFilter,\n              caseSensitiveFilter,\n              headers,\n              useFuzzySearch,\n              maxFuzzyDistance,\n            });\n\n            setTableDisplayRows(fRows);\n            setFilterValue(initialFilter);\n          } else {\n            setTableDisplayRows(sortedRows);\n          }\n        },\n      });\n    }\n\n    // We want this to only run on component load, so leaving it as []\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    onChange({\n      sortedColumn: sortCol,\n      sortedAscending: sortAscending,\n      rowsShown: maxNumber,\n      filter: filterValue,\n      page: activePage,\n      pages: numberOfPages,\n      totalFiltered: filteredRows().length,\n    });\n  }, [\n    activePage,\n    filterValue,\n    filteredRows,\n    maxNumber,\n    numberOfPages,\n    onChange,\n    sortAscending,\n    sortCol,\n  ]);\n\n  /* ********************************* */\n  const headerButton = (header: headerDataType) => {\n    if (header.noSort !== undefined && header.noSort === true) {\n      return header.name;\n    }\n\n    const buttonIconType =\n      header.key === sortCol || header.sortKey === sortCol\n        ? header.type\n        : 'sortable';\n    const buttonIconColor = buttonIconType === 'sortable' ? '#ccc' : undefined;\n    return (\n      <button\n        type='button'\n        onClick={() => {\n          const col = header.sortKey ?? header.key;\n          const isSortAscending = col !== sortCol || !sortAscending;\n          sortTableRows(col, isSortAscending);\n        }}\n        style={{\n          border: 'none',\n          padding: 'none',\n          background: 'none',\n          width: '100%',\n          textAlign: 'left',\n        }}\n      >\n        <SortIcons\n          sortAsc={sortAscending}\n          type={buttonIconType}\n          color={buttonIconColor}\n        />\n        {header.name}\n      </button>\n    );\n  };\n\n  /* ********************************* */\n  const setAriaSort = (col: string) => {\n    if (col !== sortCol) {\n      return undefined;\n    }\n    return sortAscending ? 'ascending' : 'descending';\n  };\n\n  const buildHeaders = (\n    <tr\n      aria-rowindex={showPagination ? 1 : undefined}\n      role={isResponsive && !isResponsiveList ? 'row' : undefined}\n    >\n      {headers.map((header) => (\n        <th\n          scope='col'\n          key={header.key}\n          aria-sort={setAriaSort(header.key)}\n          style={header.style}\n          className={`${header.className} ${\n            header.key === sortCol || header.sortKey === sortCol\n              ? sortedCellClass\n              : ''\n          }`}\n          role={isResponsive && !isResponsiveList ? 'columnheader' : undefined}\n        >\n          {headerButton(header)}\n        </th>\n      ))}\n    </tr>\n  );\n\n  /* ********************************* */\n  const buildDataRow = (rowData: tableDataType) => (\n    <tr\n      key={rowData.id}\n      aria-rowindex={showPagination ? rowData.rowindex : undefined}\n      role={isResponsive && !isResponsiveList ? 'row' : undefined}\n    >\n      {headers.map((header) => {\n        const data = dangerouslySetInnerHTML ? (\n          // eslint-disable-next-line react/no-danger\n          <span dangerouslySetInnerHTML={{ __html: rowData[header.key] }} />\n        ) : (\n          rowData[header.key]\n        );\n\n        const className = `${!data ? emptyCellClassName : ''} ${\n          header.key === sortCol || header.sortKey === sortCol\n            ? sortedCellClass\n            : ''\n        }`;\n        if (header.rowheader) {\n          return (\n            <th\n              scope='row'\n              key={`${rowData.id}${header.key}`}\n              data-sorttable-data-cell\n              role={isResponsive && !isResponsiveList ? 'rowheader' : undefined}\n              className={className}\n            >\n              {data}\n            </th>\n          );\n        }\n        return (\n          <td\n            key={`${rowData.id}${header.key}`}\n            data-sorttable-data-cell\n            role={isResponsive && !isResponsiveList ? 'cell' : undefined}\n            className={className}\n          >\n            {isResponsive && !isResponsiveList ? (\n              <span aria-hidden data-responsive-header>\n                {header.name}\n              </span>\n            ) : null}\n            {data}\n          </td>\n        );\n      })}\n    </tr>\n  );\n\n  /* ********************************* */\n  const displayRows = () =>\n    !showPagination || !maxNumber\n      ? filteredRows()\n      : filteredRows().slice(startRow, startRow + maxNumber);\n\n  const buildData = () => displayRows().map((row) => buildDataRow(row));\n\n  /* ********************************* */\n  const showNumberInput = () => (\n    <div data-sort-number-of-inputs>\n      Show\n      <select\n        className='form-control form-select'\n        aria-label='Number of items shown'\n        value={maxNumber || ''} // TODO this seems like it should be null or undefined ... ?? doesn't work here\n        style={{\n          width: '75px',\n          display: 'inline-block',\n          marginLeft: '0.75em',\n          marginRight: '0.75em',\n        }}\n        onChange={(e) => {\n          setActivePage(1);\n          setMaxNumber(parseInt(e.target.value, 10) ?? null);\n        }}\n      >\n        {viewSteps?.map((step) => (\n          <option value={step} key={step}>\n            {step}\n          </option>\n        ))}\n        <option value=''>All</option>\n      </select>\n      results\n    </div>\n  );\n\n  /* ********************************* */\n  if (tableDisplayRows.length === 0) {\n    return <>{noData}</>;\n  }\n  return (\n    <div className='container-fluid'>\n      <React.Suspense fallback={<></>}>\n        {isResponsive && !isResponsiveList ? <ResponsiveCss /> : null}\n\n        <div\n          className='row'\n          style={{ marginBottom: showPagination || showFilter ? '15px' : '0' }}\n        >\n          {showPagination ? (\n            <div className='col-sm'>{showNumberInput()}</div>\n          ) : null}\n\n          {showFilter ? (\n            <div className='col-sm' style={{ textAlign: 'right' }}>\n              <Filter\n                value={filterValue}\n                onChange={(a) => {\n                  filterTableRows(a.target.value);\n                }}\n                label='Filter'\n                id={sortTableId}\n                debounceTimeout={debounceTimeout}\n              />\n            </div>\n          ) : null}\n        </div>\n        <div className='row'>\n          {isResponsive || isResponsiveList ? (\n            <SortDropDown\n              headers={headers}\n              selected={sortCol}\n              sortAscending={sortAscending}\n              onChange={(col, sortAsc) => {\n                sortTableRows(col, sortAsc);\n              }}\n            />\n          ) : null}\n\n          <table\n            className={`table ${tableClassName}`}\n            id={sortTableId}\n            aria-describedby={`${sortTableId}RowsShownSummary`}\n            aria-rowcount={\n              showPagination || showFilter\n                ? tableDisplayRows.length + 1\n                : undefined\n            }\n            data-sort-responsive={\n              (isResponsive && !isResponsiveList) ?? undefined\n            }\n            data-sort-responsive-has-list={isResponsiveList ?? undefined}\n            data-sort-responsive-has-list-always-hide={\n              isResponsiveListAlwaysShow ?? undefined\n            }\n            role={isResponsive && !isResponsiveList ? 'table' : undefined}\n          >\n            {caption ? <caption>{caption}</caption> : null}\n            <thead\n              className={headerClassName}\n              role={isResponsive && !isResponsiveList ? 'rowgroup' : undefined}\n            >\n              {buildHeaders}\n            </thead>\n            {!isLoading ? (\n              <tbody\n                role={\n                  isResponsive && !isResponsiveList ? 'rowgroup' : undefined\n                }\n                data-testid='sortTableBody'\n              >\n                {buildData()}\n              </tbody>\n            ) : null}\n          </table>\n\n          {isResponsiveList ? (\n            <List\n              headers={headers}\n              tableData={displayRows()}\n              isResponsiveListAlwaysShow={isResponsiveListAlwaysShow}\n            />\n          ) : null}\n\n          {tableDisplayRows.findIndex((row) => !row.hide) === -1\n            ? allFiltered\n            : null}\n\n          {isLoading && !isLoadingMessage ? <Loading /> : null}\n          {isLoading && isLoadingMessage ? isLoadingMessage : null}\n        </div>\n        <div className='row'>\n          <div\n            className='col-sm'\n            id={`${sortTableId}RowsShownSummary`}\n            data-pagination-summary\n          >\n            {!isLoading ? (\n              <TableSummary\n                totalEntries={tableData.length}\n                startRow={maxNumber ? startRow + 1 : 0}\n                endRow={\n                  maxNumber ? startRow + maxNumber : filteredRows().length\n                }\n                filteredTotal={filteredRows().length}\n                sortColumn={\n                  headers.find(\n                    (header) =>\n                      header.key === sortCol || header.sortKey === sortCol\n                  )?.name\n                }\n                sortDirection={sortAscending ? 'ascending' : 'descending'}\n              />\n            ) : null}\n          </div>\n\n          {showPagination ? (\n            <div className='col-sm'>\n              <Pagination\n                numberOfPages={numberOfPages}\n                activePage={activePage}\n                id={sortTableId}\n                onPageChange={(page) => {\n                  setActivePage(page);\n                }}\n              />\n            </div>\n          ) : null}\n        </div>\n      </React.Suspense>\n    </div>\n  );\n};\n\nexport default SortTable;\n","import React from 'react';\nimport SortTable, {\n  tableDataType,\n  headerDataType,\n  sortTableVersion,\n} from './Components/SortTable';\n\nimport './app.css';\n\nfunction App(): JSX.Element {\n  const headers: headerDataType[] = [\n    { name: 'Product Name', key: 'name', type: 'alpha', rowheader: true },\n    { name: 'Price', key: 'price', className: 'myCustomPriceClass' },\n\n    {\n      name: 'Stock',\n      key: 'stock',\n      type: 'number',\n      noFilter: true,\n    },\n    {\n      name: 'Sale day',\n      key: 'day',\n      type: 'size',\n      sortKey: 'saledaynum',\n    },\n    {\n      name: 'Link',\n      key: 'url',\n      noSort: true,\n      noFilter: true,\n      style: { color: 'purple' },\n    },\n  ];\n  const data: tableDataType[] = [\n    {\n      id: 1,\n      name: 'Cheese',\n      price: '$4.90',\n      stock: 20,\n      day: 'Friday',\n      saledaynum: 5,\n      url: '',\n    },\n    {\n      id: 2,\n      name: 'Milk',\n      price: '$1.90',\n      stock: 4,\n      day: 'Monday',\n      saledaynum: 1,\n    },\n    {\n      id: 3,\n      name: 'Yoghurt',\n      price: '$2.40',\n      stock: 12,\n      day: 'Thursday',\n      saledaynum: 4,\n    },\n    {\n      id: 4,\n      name: 'Heavy Cream',\n      price: '$3.90',\n      stock: 9,\n      day: 'Tuesday',\n      saledaynum: 2,\n    },\n    {\n      id: 5,\n      name: 'Butter',\n      price: '$0.90',\n      stock: 99,\n      day: 'Wednesday',\n      saledaynum: 3,\n    },\n    {\n      id: 6,\n      name: 'Sour Cream',\n      price: '$2.90',\n      stock: 86,\n      day: 'Saturday',\n      saledaynum: 6,\n    },\n    {\n      id: 7,\n      name: 'Fancy French Cheese',\n      price: '$99.0',\n      stock: 15,\n      url: <a href='https://google.com'>hello google</a>,\n      day: 'Sunday',\n      saledaynum: 0,\n    },\n    { id: 8, name: 'Eggs', price: '$1.90', stock: 86 },\n    {\n      id: 9,\n      name: 'Ricotta Cheese',\n      price: '$3.99',\n      stock: 6,\n      day: 'Saturday',\n      saledaynum: 6,\n    },\n    { id: 10, name: 'Frozen Custard', price: '$5.50', stock: 11 },\n    {\n      id: 11,\n      name: 'Whey Powder',\n      price: '$15.90',\n      stock: 8,\n      day: 'Wednesday',\n      saledaynum: 3,\n    },\n  ];\n\n  return (\n    <div className='container'>\n      <h1>Sample Filtering and Sorting Table</h1>\n      <p>\n        This is the demo page for a React sort table component. See the{' '}\n        <a href='https://github.com/mydobie/sortTable'>Github page</a> for more\n        information.\n      </p>\n      <hr />\n      <h2>Responsive using modified CSS</h2>\n      <p>\n        This table has sorting, filter, and pagination enable. To assist users\n        to know what column is sorted, the sorted cells have a custom CSS\n        applied. On screens less than 700px, custom CSS will be applied to\n        display the table to appear as if it is a list.\n      </p>\n      <SortTable\n        id='sampleTable1'\n        tableData={data}\n        headers={headers}\n        initialSort='name'\n        initialSortDsc\n        showFilter\n        showPagination\n        viewSteps={[1, 2, 4, 50]}\n        caption='Store inventory'\n        tableClassName='table-hover table-sm'\n        defaultToAll\n        isResponsive\n        emptyCellClassName='emptyCell'\n        sortedCellClass='sortedCellClass'\n        useFuzzySearch\n        initialPage={2}\n        initialFilter='cheese'\n        initialRowsDisplayed={2}\n        allDataFilteredMessage='My custom all filtered message'\n        onChange={(changeData) => {\n          // eslint-disable-next-line no-console\n          console.log(changeData);\n        }}\n      />\n      <hr />\n      <h2>Responsive using definition list</h2>\n      <p>\n        On screens less than 600px, the table will be hidden and a definition\n        list will be shown instead.\n      </p>\n      <SortTable\n        id='sampleTable2'\n        tableData={data}\n        headers={headers}\n        initialSort='month'\n        caption='Store inventory'\n        tableClassName='table-hover table-sm'\n        isResponsiveList\n      />\n      <hr />\n      <ul>\n        <li>\n          <strong>Project Name: </strong>\n          {process.env.REACT_APP_NAME}\n        </li>\n        <li>\n          <strong>Project Version: </strong>\n          {sortTableVersion}\n        </li>\n        <li>\n          <strong>Git Commit: </strong>\n          {process.env.REACT_APP_GIT_SHA}\n        </li>\n        <li>\n          <strong>React Version: </strong>\n          {React.version}\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","// Page rendered when url doesn't match route in App.jsx\n\nimport React, { ReactElement } from 'react';\n\n// *** Main component ***\nconst FourOhFour = (/* props */): ReactElement => (\n  <>\n    <h1>Page not found</h1>\n    <p>The page you requested could not be found.</p>\n  </>\n);\n\nexport default FourOhFour;\n","/* eslint-disable import/no-extraneous-dependencies */\n// Contains routing for entire application\n\nimport React, { ReactElement } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport ROUTES from './AppRouteNames';\n\nimport Home from './Example';\nimport FourOhFour from './FourOhFour';\n\nconst AppRoutes = (): ReactElement => (\n  <>\n    <Switch>\n      <Route path={ROUTES.HOME} exact>\n        <Home />\n      </Route>\n      {/* EXAMPLE: Route with a redirect */}\n      <Route path='/home' exact>\n        <Redirect to={ROUTES.HOME} />\n      </Route>\n\n      <Route path='/'>\n        <FourOhFour />\n      </Route>\n    </Switch>\n  </>\n);\n\nexport default AppRoutes;\n","/* eslint-disable import/no-extraneous-dependencies */\n\n// Contains routing and any application wide items like headers, footers and navigation\n\nimport React, { ReactElement } from 'react';\nimport { HashRouter as Router } from 'react-router-dom'; // Use `HashRouter as Router` when you can't control the URL ... like GitHub pages\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppNavBar from './AppNavBar';\nimport AppRoutes from './AppRoutes';\n\nimport './app.css';\n\nconst App = (): ReactElement => {\n  const basename = '';\n\n  return (\n    <>\n      <Router basename={basename}>\n        <AppNavBar />\n\n        <main>\n          <AppRoutes />\n        </main>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React, { ReactElement } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst RenderApp: ReactElement = <App />;\n\nReactDOM.render(RenderApp, document.getElementById('root'));\n"],"sourceRoot":""}